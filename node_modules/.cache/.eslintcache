[{"C:\\Users\\DELL\\Documents\\celowear\\src\\index.js":"1","C:\\Users\\DELL\\Documents\\celowear\\src\\App.js":"2","C:\\Users\\DELL\\Documents\\celowear\\src\\Header.js":"3","C:\\Users\\DELL\\Documents\\celowear\\src\\Shop.js":"4","C:\\Users\\DELL\\Documents\\celowear\\src\\AddCloth.js":"5"},{"size":198,"mtime":1636878742260,"results":"6","hashOfConfig":"7"},{"size":4047,"mtime":1637072943519,"results":"8","hashOfConfig":"7"},{"size":704,"mtime":1636826901466,"results":"9","hashOfConfig":"7"},{"size":2074,"mtime":1637056461124,"results":"10","hashOfConfig":"7"},{"size":2827,"mtime":1637058119582,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"se57sc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Documents\\celowear\\src\\index.js",[],"C:\\Users\\DELL\\Documents\\celowear\\src\\App.js",["25","26"],"import React, { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport AddCloth from \"./AddCloth\";\nimport Header from \"./Header\";\nimport Shop from \"./Shop\";\n\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\";\n\nimport wear from \"./contracts/wear.abi.json\";\nimport erc20 from \"./contracts/IERC.abi.json\";\n\nconst ERC20_DECIMALS = 18;\n\nconst contractAddress = \"0x46178FeB4e08589978a0e1c440fBB0A0A8EB2A64\";\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\n\nfunction App() {\n  const [contract, setcontract] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [kit, setKit] = useState(null);\n  const [cUSDBalance, setcUSDBalance] = useState(0);\n  const [clothes, setClothes] = useState([])\n\n  const connectCeloWallet = async () => {\n    if (window.celo) {\n      // notification(\"⚠️ Please approve this DApp to use it.\")\n      try {\n        await window.celo.enable();\n        // notificationOff()\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const user_address = accounts[0];\n\n        kit.defaultAccount = user_address;\n\n        await setAddress(user_address);\n\n        await setKit(kit);\n      } catch (error) {\n        console.log(\"There is an error\");\n        console.log({ error });\n        // notification(`⚠️ ${error}.`)\n      }\n    } else {\n      console.log(\"please install the extension\");\n      // notification(\"⚠️ Please install the CeloExtensionWallet.\")\n    }\n  };\n\n  const getBalance = async () => {\n    const balance = await kit.getTotalBalance(address);\n    const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n\n    const contract = new kit.web3.eth.Contract(wear, contractAddress);\n    setcontract(contract);\n    setcUSDBalance(USDBalance);\n  };\n\n  useEffect(() => {\n    connectCeloWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && address) {\n      return getBalance();\n    } else {\n      console.log(\"no kit or address\");\n    }\n  }, [kit, address]);\n\n  useEffect(() => {\n    if (contract) {\n      getClothes();\n    }\n  }, [contract]);\n\n\n  const getClothes = async function () {\n    const clothLength = await contract.methods.getClothLength().call();\n    const _cloths = [];\n\n    for (let index = 0; index < clothLength; index++) {\n      let _cloth = new Promise(async (resolve, reject) => {\n        let c = await contract.methods.getCloth(index).call();\n        resolve({\n          index: index,\n          owner: c[0],\n          name: c[1],\n          description: c[2],\n          image: c[3],\n          price: c[4],\n          isUsed: c[5],\n        });\n      });\n\n      _cloths.push(_cloth);\n    }\n    const cloths = await Promise.all(_cloths);\n\n    setClothes(cloths);\n\n  };\n\n  const buyCloth = async (_index, _price)=>{\n    try {\n      const cUSDContract = new kit.web3.eth.Contract(erc20, cUSDContractAddress);\n      const cost = new BigNumber(_price).shiftedBy(ERC20_DECIMALS).toString();\n\n      await cUSDContract.methods\n        .approve(contractAddress, cost)\n        .send({ from: address });\n\n      await contract.methods.buyCloth(_index).send({ from: address });\n      // return result\n      getBalance();\n      getClothes();\n    } catch (error) {\n      console.log({ error });\n    }\n  }\n  const addCloth = async (_name, _description, _image, _price, _isUsed) => {\n    try {\n      const price = new BigNumber(_price)\n        .shiftedBy(ERC20_DECIMALS).toString();\n\n\n      await contract.methods\n        .addCloth(\n          _name,\n          _description,\n          _image,\n          price,\n          _isUsed, \n          \n        )\n        .send({ from: address });\n      getClothes();\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  return (\n    <Fragment>\n      <Header balance={cUSDBalance} />\n      <Shop clothes = {clothes} buyCloth = {buyCloth}/>\n      <AddCloth addCloth = {addCloth}/>\n    </Fragment>\n  );\n}\n\n\n\nexport default App;\n","C:\\Users\\DELL\\Documents\\celowear\\src\\Header.js",["27"],"const Header = (props) => {\r\n  return (\r\n    <header id=\"header\" className=\"header-v1\">\r\n      <div className=\"header-center\">\r\n        <div className=\"container container-content\">\r\n          <div className=\"row flex align-items-center justify-content-between\">\r\n            <div className=\" flex justify-content-center\">\r\n              <a href=\"#\">\r\n                <img src=\"img/logo.png\" alt=\"\" className=\"img-reponsive\" />\r\n              </a>\r\n            </div>\r\n            <div className=\"col-md-4 col flex justify-content-end\">\r\n                <h3>${props.balance}cUSD</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\DELL\\Documents\\celowear\\src\\Shop.js",["28"],"import React from 'react';\r\n\r\nconst Shop = (props) => {\r\n  const buyCloth = (index, price)=>{\r\n    props.buyCloth(index, price)\r\n  }\r\n  return (\r\n    <div className=\"container container-content\">\r\n      <div className=\"product-collection-grid product-grid bd-bottom\">\r\n        <div className=\"row engoc-row-equal\">\r\n          {props.clothes.map((cloth) => (\r\n            <div className=\"col-xs-6 col-sm-4 col-md-2 col-lg-2 product-item\">\r\n              <div className=\"product-img\">\r\n                <a href>\r\n                  <img\r\n                    src={cloth.image}\r\n                    alt=\"\"\r\n                    className=\"img-responsive\"\r\n                  />\r\n                </a>\r\n                <div className=\"ribbon zoa-hot\">\r\n                  <span>{cloth.isUsed ? \"Used\" : \"New\"}</span>\r\n                </div>\r\n                <div className=\"product-button-group\">\r\n                 \r\n                  <a href=\"#\" onClick = {()=>buyCloth(cloth.index)} className=\"zoa-btn zoa-addcart\">\r\n                    <span className=\"zoa-icon-cart\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"product-info text-center\">\r\n                <h3 className=\"product-title\">\r\n                  <a href>{cloth.name}</a>\r\n                </h3>\r\n                <div className=\"short-desc\">\r\n                  <p>\r\n                    {cloth.description}\r\n                  </p>\r\n                </div>\r\n                <div className=\"product-price\">\r\n                  <span>${cloth.price/1000000000000000000}</span>\r\n                </div>\r\n                <button\r\n                onClick = {()=>buyCloth(cloth.index, cloth.price)}\r\n                id=\"\"\r\n                className=\"button_mini zoa-btn\"\r\n                type=\"submit\"\r\n                style = {{\"marginLeft\": \"15px\", \"marginTop\": \"12px\"}}\r\n              >\r\n                Buy Cloth\r\n              </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\DELL\\Documents\\celowear\\src\\AddCloth.js",[],{"ruleId":"29","severity":1,"message":"30","line":73,"column":6,"nodeType":"31","endLine":73,"endColumn":20,"suggestions":"32"},{"ruleId":"29","severity":1,"message":"33","line":79,"column":6,"nodeType":"31","endLine":79,"endColumn":16,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":15,"nodeType":"37","endLine":8,"endColumn":27},{"ruleId":"35","severity":1,"message":"36","line":26,"column":19,"nodeType":"37","endLine":26,"endColumn":101},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.","ArrayExpression",["38"],"React Hook useEffect has a missing dependency: 'getClothes'. Either include it or remove the dependency array.",["39"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"40","fix":"41"},{"desc":"42","fix":"43"},"Update the dependencies array to be: [kit, address, getBalance]",{"range":"44","text":"45"},"Update the dependencies array to be: [contract, getClothes]",{"range":"46","text":"47"},[2108,2122],"[kit, address, getBalance]",[2197,2207],"[contract, getClothes]"]